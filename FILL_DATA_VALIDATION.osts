{"version":"0.3.0","body":"function main(workbook: ExcelScript.Workbook) {\n    // Your code here\n    let sheet = workbook.getWorksheet(\"PHONE 6.100 AC-PC\");\n\n    let team = sheet.getRange('C7:C38');\n\n    let rn = sheet.getRange(\"E7:E38\");\n\n    let nct = sheet.getRange(\"G7:G38\");\n\n    let charge = sheet.getRange(\"C4\");\n\n    let loc = sheet.getRange('D7:D38');\n\n    const teamDataValidation: ExcelScript.ListDataValidation = {\n      source: '=$B$55:$B$116',\n        inCellDropDown: true\n    };\n        let locValidation: ExcelScript.ListDataValidation = {\n          source: 'AC,PC', inCellDropDown: true\n        };\n\n  const rnDataValidation: ExcelScript.ListDataValidation = {\n    source: '\"RN-NCT LIST\"!$F:$F',\n    inCellDropDown: true\n  };\n\n  const nctDataValidation: ExcelScript.ListDataValidation = {\n    source: '\"RN-NCT LIST\"!$F:$F',\n    inCellDropDown: true\n  };\n\n  const chargeDataValidation: ExcelScript.ListDataValidation = {\n    source: '\"RN-NCT LIST\"!$F:$F',\n    inCellDropDown: true\n  };\n\n    const rule: ExcelScript.DataValidationRule = {\n      list: teamDataValidation\n    }\n\n    const rule2: ExcelScript.DataValidationRule = {\n      list: locValidation\n    }\n\n  const teamRule: ExcelScript.DataValidationRule = {\n    list: teamDataValidation\n  }\n\n  const locRule: ExcelScript.DataValidationRule = {\n    list: locValidation\n  }\n    \n\n  const rnRule: ExcelScript.DataValidationRule = {\n    list: rnDataValidation\n  }\n\n  const nctRule: ExcelScript.DataValidationRule = {\n    list: nctDataValidation\n  }\n\n  const chargeRule: ExcelScript.DataValidationRule = {\n    list: chargeDataValidation\n  }\n\n    const dataValidation = team.getDataValidation();\n\n    const rnData = rn.getDataValidation();\n\n    const nctData = nct.getDataValidation();\n\n    const chargeData = charge.getDataValidation();\n\n    dataValidation.setRule(rule);\n\n    rnData.setRule(rnRule);\n    nctData.setRule(nctRule);\n    chargeData.setRule(chargeRule);\n    team.getDataValidation().setRule(teamRule);\n    loc.getDataValidation().setRule(locRule);\n\n    rnData.setErrorAlert({ showAlert: false, style: ExcelScript.DataValidationAlertStyle.warning, message: \"There is no number listed for this person, select yes to continue\", title: \"This personin not listed in system select yes to continue\" });\n\n  nctData.setErrorAlert({ showAlert: false, style: ExcelScript.DataValidationAlertStyle.warning, message: \"There is no number listed for this person, select yes to continue\", title: \"This personin not listed in system select yes to continue\" });\n\n  chargeData.setErrorAlert({ showAlert: false, style: ExcelScript.DataValidationAlertStyle.warning, message: \"There is no number listed for this person, select yes to continue\", title: \"This personin not listed in system select yes to continue\" });\n\n  loc.getDataValidation().setErrorAlert({ showAlert: false, style: ExcelScript.DataValidationAlertStyle.warning, message: \"This is an invalid level of care\", title: \"\" });\n\n  team.getDataValidation().setErrorAlert({ showAlert: false, style: ExcelScript.DataValidationAlertStyle.warning, message: \"This is doesn't match a known team\", title: \"\" });\n\n  rnData.setPrompt({ showPrompt: false, message: null, title: null });\n  nctData.setPrompt({ showPrompt: false, message: null, title: null });\n  chargeData.setPrompt({ showPrompt: false, message: null, title: null });\n  team.getDataValidation().setPrompt({ showPrompt: false, message: null, title: null });\n  loc.getDataValidation().setPrompt({ showPrompt: false, message: null, title: null });\n\n    rnData.setIgnoreBlanks(true);\n    nctData.setIgnoreBlanks(true);\n    chargeData.setIgnoreBlanks(true);\n    loc.getDataValidation().setIgnoreBlanks(true);\n    team.getDataValidation().setIgnoreBlanks(true);\n}\n","description":"","noCodeMetadata":"","parameterInfo":"{\"version\":1,\"originalParameterOrder\":[],\"parameterSchema\":{\"type\":\"object\",\"default\":{},\"x-ms-visibility\":\"internal\"},\"returnSchema\":{\"type\":\"object\",\"properties\":{}},\"signature\":{\"comment\":\"\",\"parameters\":[{\"name\":\"workbook\",\"comment\":\"\"}]}}","apiInfo":"{\"variant\":\"synchronous\",\"variantVersion\":2}"}