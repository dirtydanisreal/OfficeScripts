function main(workbook: ExcelScript.Workbook) {
  let cs = workbook.getWorksheet("CENSUS TRACKING");
  const protection = cs.getProtection();

  // Pause protection if active
  if (protection.getProtected()) {
    protection.pauseProtection("imsorrydave");
  }

  // Apply date formulas for B2, B8, B14, ..., B38
  for (let i = 0; i < 7; i++) {
    let cell = cs.getRange(`B${2 + i * 6}`);
    cell.setFormula(`=TEXT(L6+${i}, "mm/dd/yy")`);
  }

  // Other formulas and their target ranges
  const formulas = [
    { range: 'M14', formula: `=SUM(IF(FREQUENCY(IF('PHONE 6.100 AC-PC'!E7:E38<>"", MATCH('PHONE 6.100 AC-PC'!E7:E38, 'PHONE 6.100 AC-PC'!E7:E38, 0)), IF('PHONE 6.100 AC-PC'!E7:E38<>"", MATCH('PHONE 6.100 AC-PC'!E7:E38, 'PHONE 6.100 AC-PC'!E7:E38, 0))) > 0, 1)) + IF(COUNTIF('PHONE 6.100 AC-PC'!E7:E38, 'PHONE 6.100 AC-PC'!C4)=0, 1, 0) + SUM(IF('PHONE 6.100 AC-PC'!G7:G38 = "RESOURCE",1,0))` },
    { range: 'M15', formula: `=SUM(IF(FREQUENCY(IF('PHONE 6.100 AC-PC'!G7:G38<>"", MATCH('PHONE 6.100 AC-PC'!G7:G38, 'PHONE 6.100 AC-PC'!G7:G38, 0)), IF('PHONE 6.100 AC-PC'!G7:G38<>"", MATCH('PHONE 6.100 AC-PC'!G7:G38, 'PHONE 6.100 AC-PC'!G7:G38, 0))) > 0, 1)) + SUM(IF('PHONE 6.100 AC-PC'!G7:G38 = "RESOURCE",-1,0))` },
    { range: 'M18', formula: `=COUNTIFS('PHONE 6.100 AC-PC'!D7:D38,"AC",'PHONE 6.100 AC-PC'!B7:B38,"<>*(ADMIT)*")` },
    { range: 'M19', formula: `=COUNTIFS('PHONE 6.100 AC-PC'!D7:D38,"PC",'PHONE 6.100 AC-PC'!B7:B38,"<>*(ADMIT)*")` },
    { range: 'M20', formula: `='PHONE 6.100 AC-PC'!O13` },
    { range: 'M23', formula: `=COUNTIFS('PHONE 6.100 AC-PC'!B7:B38,"*(+)*",'PHONE 6.100 AC-PC'!B7:B38,"<>*(ADMIT)*")` },
    { range: 'M26', formula: `=SUM(COUNTIFS('PHONE 6.100 AC-PC'!B7:B38,{"*(SIT)*","*(TS)*","*(72)*"},'PHONE 6.100 AC-PC'!B7:B38,"<>*(ADMIT)*"))` },
    { range: 'M29', formula: `=COUNTIF('PHONE 6.100 AC-PC'!B7:B38,"*(ADMIT)*")` },
    { range: 'A1', formula: `="Census Tracking Week : " & TEXT(L6,"mm/dd") & " - " & TEXT(L6+6,"mm/dd")` }
  ];

  // Apply all formulas
  formulas.forEach(({ range, formula }) => {
    cs.getRange(range).setFormula(formula);
  });

  billThing(workbook);

  clearAndSetAllowEdit(workbook, ["C3:H7", "C9:H13", "C15:H19", "C21:H25", "C27:H31", "C33:H37", "C39:H43", "L6"]);
  
  // Resume protection
  protection.resumeProtection();

  
}



function billThing(workbook: ExcelScript.Workbook) {
  let cs = workbook.getWorksheet("CENSUS TRACKING");

  const formulas = [{range: 'Q19', formula: '=S20'},{range: 'Q20', formula: '=M14& " / " &M15'},{range:'Q21',formula: '=S26& " / " & S23'},{range:'Q22',formula: '=S19& " / " & S18'},{range:'Q23',formula: '=S29& " / 0"'}];

   const formulas2 = [{range: 'Q3', formula: '=S20'},{range: 'Q4', formula: '=S14& " / " &S15'},{range:'Q5',formula: '=S26& " / " & S23'},{range:'Q6',formula: '=S19& " / " & S18'},{range:'Q7',formula: '=S29& " / 0"'}];

  const formulas3 = [{ range: 'S20', formula: '=SUM(M20,P20)' }, { range: 'S14', formula: '=SUM(M14,P14)' }, { range: 'S15', formula: '=SUM(M15,P15)' }, { range: 'S18', formula: '=SUM(M18,P18)' }, { range: 'S19', formula: '=SUM(M19,P19)' }, { range: 'S23', formula: '=SUM(M23,P23)' }, { range: 'S26', formula: '=SUM(M26,P26)' }, { range: 'S26', formula: '=SUM(M26,P26)' }, { range: 'S29', formula: '=SUM(M29,P19)' }];

  // Apply all formulas
  formulas.forEach(({ range, formula }) => {
    cs.getRange(range).setFormula(formula);
  });

  //formulas2.forEach(({ range, formula }) => {
  //  cs.getRange(range).setFormula//(formula);
  //});

  formulas3.forEach(({ range, formula }) => {
    cs.getRange(range).setFormula(formula);
  });

  let values = cs.getRange("Q19:Q23");

  cs.getRange("Q3:Q7").copyFrom(values, ExcelScript.RangeCopyType.values, false, false);
}

function clearAndSetAllowEdit(workbook: ExcelScript.Workbook, editableRanges: string[]) {
  // Select the active sheet (you can change this to a specific sheet name if needed)
  let sheet = workbook.getActiveWorksheet();

  // Clear all existing allowEdit permissions by unprotecting the sheet
  let protection = sheet.getProtection();
  if (protection.getProtected()) {
    protection.pauseProtection();
  }

  // Protect the sheet to apply new settings
  protection.protect();

  protection.setPassword("imsorrydave");

  // Loop through the specified ranges and set them as editable
  editableRanges.forEach(rangeAddress => {
    let range = sheet.getRange(rangeAddress);
    range.getFormat().getProtection().setLocked(false);
  });

  // Log completion
  console.log("Protection settings updated. Specified ranges are now editable.");
}
